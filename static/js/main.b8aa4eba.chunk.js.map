{"version":3,"sources":["components/Square.js","components/handlers.js","actions/gameAction.js","components/Board.js","actions/roundAction.js","components/Controls.js","components/Statistics.js","components/Game.js","components/Nav.js","App.js","reducers/roundReducer.js","reducers/gameReducer.js","reducers/index.js","index.js"],"names":["Square","value","handleClick","type","className","onClick","defaultProps","lines","calculateWinner","squares","i","length","a","b","c","playerStep","index","letter","payload","Board","dispatch","useDispatch","useSelector","state","game","clickAllowed","status","statusHandler","sq","winner","console","log","squares2","slice","includes","compI","sq1","random","Math","floor","computersTurnHandler","renderSquare","Controls","Statistics","round","alg","human","tie","Game","Nav","App","initState","rounds","roundReducer","action","gameReducer","map","square","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8aa4eba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Square = ({ value, handleClick }) => (\n  <button\n    type=\"submit\"\n    className=\"square\"\n    onClick={() => {\n      handleClick(value);\n    }}\n  >\n    {value}\n  </button>\n);\n\nSquare.propTypes = {\n  value: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n};\n\nSquare.defaultProps = { value: null };\nexport default Square;\n","const lines = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nexport const calculateWinner = (squares) => {\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\nexport const computersTurnHandler = (sq1) => {\n  const sq = [...sq1];\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (sq[a] === 'O' && sq[b] === 'O' && sq[c] === null) {\n      sq[c] = 'O';\n      return c;\n    }\n    if (sq[a] === 'O' && sq[c] === 'O' && sq[b] === null) {\n      sq[b] = 'O';\n      return b;\n    }\n    if (sq[b] === 'O' && sq[c] === 'O' && sq[a] === null) {\n      sq[a] = 'O';\n      return a;\n    }\n    if (sq[a] === 'X' && sq[b] === 'X' && sq[c] === null) {\n      sq[c] = 'O';\n      return c;\n    }\n    if (sq[a] === 'X' && sq[c] === 'X' && sq[b] === null) {\n      sq[b] = 'O';\n      return b;\n    }\n    if (sq[b] === 'X' && sq[c] === 'X' && sq[a] === null) {\n      sq[a] = 'O';\n      return a;\n    }\n  }\n  let random;\n  while (!sq[random]) {\n    random = Math.floor(Math.random() * sq.length);\n    if (!sq[random]) {\n      sq[random] = 'O';\n      return random;\n    }\n    random = null;\n  }\n  return null;\n};\n","export const playerStep = (index, letter) => ({\n  type: 'PLAYER_STEP',\n  payload: {\n    index, letter,\n  },\n});\n\nexport const resetGame = () => ({\n  type: 'RESET_GAME',\n});\n\nexport const prohibitClick = () => ({\n  type: 'PROHIBIT_CLICK',\n});\n\nexport const allowClick = () => ({\n  type: 'ALLOW_CLICK',\n});\n\nexport const algWinner = () => ({\n  type: 'ALG_WINNER',\n});\n\nexport const humanWinner = () => ({\n  type: 'HUMAN_WINNER',\n});\n\nexport const noWinner = () => ({\n  type: 'NO_WINNER',\n});\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Square from './Square';\nimport { calculateWinner, computersTurnHandler } from './handlers';\nimport { addAlgWinner, addHumanWinner, addTie } from '../actions/roundAction';\nimport {\n  playerStep, prohibitClick, allowClick, algWinner, humanWinner, noWinner,\n} from '../actions/gameAction';\n\nconst Board = () => {\n  const dispatch = useDispatch();\n\n  const { squares, clickAllowed, status } = useSelector((state) => state.game);\n\n  const statusHandler = (sq) => {\n    const winner = calculateWinner(sq);\n    if (winner === 'X') {\n      dispatch(humanWinner());\n      dispatch(addHumanWinner());\n    }\n    if (winner === 'O') {\n      dispatch(algWinner());\n      dispatch(addAlgWinner());\n    }\n    if (!winner) {\n      dispatch(noWinner());\n      dispatch(addTie());\n    }\n    console.log(status);\n  };\n\n  const handleClick = (i) => {\n    if (!clickAllowed || squares[i]) {\n      return;\n    }\n    const squares2 = squares.slice();\n    dispatch(prohibitClick());\n    dispatch(playerStep(i, 'X'));\n    squares2[i] = 'X';\n\n    if (calculateWinner(squares2) || !squares2.includes(null)) {\n      statusHandler(squares2);\n      return;\n    }\n\n    const compI = computersTurnHandler(squares2);\n    dispatch(playerStep(compI, 'O'));\n    if (calculateWinner(squares2) || !squares2.includes(null)) {\n      statusHandler(squares2);\n      return;\n    }\n    dispatch(allowClick());\n  };\n\n  const renderSquare = (i) => (\n    <Square\n      value={squares[i]}\n      handleClick={() => {\n        handleClick(i);\n      }}\n    />\n  );\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n};\nexport default Board;\n","export const addRound = () => ({\n  type: 'ADD_ROUND',\n});\n\nexport const addAlgWinner = () => ({\n  type: 'ADD_ALG_WINNER',\n});\n\nexport const addHumanWinner = () => ({\n  type: 'ADD_HUMAN_WINNER',\n});\n\nexport const addTie = () => ({\n  type: 'ADD_TIE',\n});\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetGame } from '../actions/gameAction';\n\nconst Controls = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <button className=\"play\" type=\"submit\" onClick={() => dispatch(resetGame())}>\n        Play again\n      </button>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Statistics = () => {\n  const { alg, human, tie } = useSelector((state) => state.round);\n  return (\n    <div className=\"statistics\">\n      <h3>Statistics</h3>\n      <div className=\"statistics-items\">\n        <p>\n          <b>Algorithm:</b> {alg}\n        </p>\n        <p>\n          <b>Human:</b> {human}\n        </p>\n        <p>\n          <b>Tie:</b> {tie}\n        </p>\n      </div>\n    </div>\n  );\n};\nexport default Statistics;\n","import React from 'react';\nimport Board from './Board';\nimport Controls from './Controls';\nimport Statistics from './Statistics';\n\nconst Game = () => (\n  <div className=\"game\">\n    <h1>Win artificial intelligence</h1>\n    <Board />\n    <Controls />\n    <Statistics />\n    <div className=\"game-info\" />\n  </div>\n);\n\nexport default Game;\n","import React from 'react';\n\nconst Nav = () => (\n  <div />\n);\n\nexport default Nav;\n","import React from 'react';\nimport './styles/app.scss';\nimport Game from './components/Game';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Game />\n      <div className=\"bg-image-red\">\n        <div className=\"bg-image-blue\">\n          <div className=\"bg-image-green\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initState = {\n  rounds: 0,\n  alg: 0,\n  human: 0,\n  tie: 0,\n};\n\nconst roundReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_ROUND':\n      return { ...state, rounds: state.rounds + 1 };\n    case 'ADD_ALG_WINNER':\n      return { ...state, alg: state.alg + 1 };\n    case 'ADD_HUMAN_WINNER':\n      return { ...state, human: state.human + 1 };\n    case 'ADD_TIE':\n      return { ...state, tie: state.tie + 1 };\n    default:\n      return { ...state };\n  }\n};\n\nexport default roundReducer;\n","const initState = {\n  squares: [null, null, null, null, null, null, null, null, null],\n  clickAllowed: true,\n  status: 'Make a Move',\n};\n\nconst gameReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'PLAYER_STEP':\n      return {\n        ...state,\n        squares: state.squares.map((square, i) => (i === action.payload.index\n          ? action.payload.letter : square)),\n      };\n    case 'RESET_GAME':\n      return {\n        ...state,\n        squares: [null, null, null, null, null, null, null, null, null],\n        clickAllowed: true,\n        status: 'Make a Move',\n      };\n    case 'ALLOW_CLICK':\n      return {\n        ...state,\n        clickAllowed: true,\n      };\n    case 'PROHIBIT_CLICK':\n      return {\n        ...state,\n        clickAllowed: false,\n      };\n    case 'ALG_WINNER':\n      return {\n        ...state,\n        status: 'The Algorithm Won',\n      };\n    case 'HUMAN_WINNED':\n      return {\n        ...state,\n        status: 'The Human Won',\n      };\n    case 'NO_WINNER':\n      return {\n        ...state,\n        status: 'Equal intelligence',\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default gameReducer;\n","import { combineReducers } from 'redux';\nimport roundReducer from './roundReducer';\nimport gameReducer from './gameReducer';\n\nconst rootReducer = combineReducers({\n  round: roundReducer,\n  game: gameReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}